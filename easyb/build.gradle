
// ToDo:
// - cobertura coverage
// - actual tests of BDD
// - build artifacts (jar, source, javadocs)
// - release (prepare/perform like maven)
// - build distribution (xdoclet)

buildscript {
  repositories {
    mavenRepo urls: 'http://gradle.artifactoryonline.com/gradle/plugins'
    dependencies {
      classpath "org.gradle.plugins:gradle-idea-plugin:0.2"
    }
  }
}

buildDirName = 'target'

println "Build dir is ${buildDir}"

apply plugin: 'groovy'
apply plugin: 'org.gradle.idea'

sourceCompatibility = 1.5
version = '0.9.8.4'

// really 
repositories {
  mavenCentral()
}


dependencies {
  compile "commons-cli:commons-cli:1.2:@jar"
  compile "org.apache.ant:ant:[1.8.0,1.8.99):@jar"
  groovy(group: 'org.codehaus.groovy', name: 'groovy', version: '[1.7.0, 1.7.99)')
}

// override the source directories
sourceSets {
  main {
    groovy {
      srcDir 'src/groovy'
      srcDir 'src/java'
      srcDir 'src/ant'
    }
    resources {
      srcDir 'src/resources'
    }
  }

  test {
    groovy {
      srcDir 'behavior/groovy'
      srcDir 'behavior/java'
    }
    resources {
      srcDir 'behavior/resources'
    }
  }
}

task distribution(dependsOn:'test') {

}

task release(dependsOn:'distribution') {

}

task compile(dependsOn:'compileGroovy') {
  println "compiling"
}

task bdd(dependsOn:['compileGroovy', 'compileTestGroovy']) {
  doLast {
  ant.taskdef(name: "easyb", classname: "org.easyb.ant.BehaviorRunnerTask") {
    classpath() {
      pathelement(location: "${buildDir}/classes/main")
    }
  }

  String failures = new File(buildDir, "failures.txt").absoluteFile

  println "${failures}"

  ant.easyb(failureProperty: "easyb.failed", failureFile: "${buildDir}/failures.txt" , parallel: false) {
    classpath() {
      pathelement(location: "${buildDirName}/classes/main")
      pathelement(location: "${buildDirName}/classes/test")
      pathelement(path: configurations.compile.asPath) // should be Test
    }
  }

  ant.fail(if: "easyb.failed", message: "Execution halted as specifications failed")
  }
}

