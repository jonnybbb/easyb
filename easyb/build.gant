/**
 * Master easyb core build
 */
includeTargets << new File("default_tasks.gant")

version = "0.7.1"

sourcedir = "src/java"
antsourcedir = "src/ant"
behaviordir =  "behavior/java"
homedir = System.properties.'user.home'
mavenrepo = "${homedir}/.m2/repository"
tarfilename = "${defaultdir}/dist/easyb-${version}.tar"
jarversion = detectOrDefaultVersion()

def detectOrDefaultVersion() {
  if(Ant.project.properties."version" != null){
	 return Ant.project.properties."version"
  }else{
  	 return version
  }
}

target("default":"validate"){
   	depends("validate")
}

target(release:"compile and archive"){
  depends("validate")

  Ant.mkdir(dir:"${defaultdir}/release")
  Ant.copy(file:"${defaultdir}/easyb-${version}.jar", todir:"${defaultdir}/release")
  Ant.copy(todir:"${defaultdir}/release"){
  	fileset(dir:"./target/lib/"){
  		exclude(name:"**/ant-*.jar")
  	}
  }
}
/**  
 * This target is command line overridden if needed- for example
 * if you need to create a snapshot version, you can type
 * gant -Dversion=snapshot jar and the resultant jar file
 * will be easyb-snapshot.jar instead of reading the default
 * value of version from above.
 */
target(jar:"create an archive of the project's classfiles"){
   depends("compile-all")
   
   Ant.jar(destfile:"${defaultdir}/easyb-${jarversion}.jar", basedir:classdir)
}

target("jar-sources":"creates a sources jar"){
   depends("init")

   Ant.jar(destfile:"${defaultdir}/easyb-${jarversion}-sources.jar"){
     fileset(dir: "$sourcedir")
     fileset(dir: "$gsourcedir")
     fileset(dir: "$antsourcedir")
   }
}

target("jar-javadocs":"creates a javadocs jar"){
   taskdef (name:'groovydoc', classname:'org.codehaus.groovy.ant.Groovydoc')

   // Groovydoc doesn't seem to support multiple sources at this time so combine them on disk first
   Ant.copy(toDir:"${defaultdir}/javadoc-sources"){
     fileset(dir: "$sourcedir")
     fileset(dir: "$gsourcedir")
     fileset(dir: "$antsourcedir")
   }

   Ant.groovydoc(destdir:"${defaultdir}/javadoc", sourcepath:"${defaultdir}/javadoc-sources", windowtitle:"easyb")
   Ant.jar(destfile:"${defaultdir}/easyb-${jarversion}-javadoc.jar") {
     fileset(dir: "${defaultdir}/javadoc")
   }
}

target("compile-all":"compile Groovy & Java classes"){
	depends("compile-core")
	depends("compile-behaviors")
}

target("compile-core":"compile Groovy & Java classes in easyb core"){
	depends(configuregroovy)
	genericgroovyc([sourcedir, gsourcedir, antsourcedir], classdir)
}

target("compile-behaviors":"compile Groovy & Java classes in easyb behavior"){
	depends(configuregroovy)
	depends("compile-core")
	genericgroovyc([behaviordir, gbehaviordir], behaviorclassdir)
}

target("validate":"runs behaviors"){
  depends("ant-task")
}

target("ant-task":"runs the easyb ant task"){
  depends(jar)

	Ant.taskdef(name:"easyb", classname:"org.disco.easyb.ant.SpecificationRunnerTask"){
		classpath(){
        	pathelement(location:"${defaultdir}/easyb-${version}.jar")
    	}
	}

	Ant.easyb(failureProperty:"easyb.failed"){
	
    classpath() {
      fileset(dir:libdir, includes:jarincludes)
      pathelement(location:"${defaultdir}/easyb-${version}.jar")
      pathelement(location:behaviorclassdir)
    }
      	
		report(location:"${defaultdir}/behavior-report.xml", format:"xmlbehavior")
	  report(location:"${defaultdir}/story-report.txt", format:"txtstory")

    behaviors(dir:gbehaviordir){
	    include(name:"**/*Story.groovy")
	    include(name:"**/*Behavior.groovy")
	    include(name:"**/*name.groovy")
	    include(name:"**/*.story")
		}
	}

  Ant.fail(if:"easyb.failed", message:"Execution halted as specifications failed")
}

target("maven-install":"install easyb into the default local maven repository") {
    depends(dist)
    depends("jar-sources")
    depends("jar-javadocs")

	def reader = new FileReader("pom-template.xml")
	def writer = new FileWriter("${defaultdir}/easyb-${version}.pom")
	
	reader.transformLine(writer) { line ->
	    line.replace("VERSION", version.toString())
	}

    Ant.path(id: "maven.artifacts"){
      fileset(dir:"${defaultdir}"){
        include(name:"easyb-${version}*.jar")
        include(name:"easyb-${version}*.pom")
      }
    }
	Ant.copy(toDir: "${mavenrepo}/org/easyb/easyb/${version}/"){
	  path(refid:"maven.artifacts")
	}
}

target("maven-bundle":"creates an easyb upload bundle for the central maven repository"){
   depends("maven-install")

   Ant.jar(destfile:"${defaultdir}/easyb-${jarversion}-bundle.jar"){
     path(refid:"maven.artifacts")
   }
}